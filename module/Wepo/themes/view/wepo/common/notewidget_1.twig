<div class="widget {{ params.data }} note">

    <div class="title">
        <div class="listtitle">
            <span class="small icon"
                  style="background-image: url(/css/img/icons/32x32-icons/note.png); margin-left: 9px;"></span>

            <h2>{{ title }}</h2>
        </div>

        <div class="buttons controls">
            <div class="buttons">
                {% if links %}
                    {% for icon_key, link in links %}
                        <a id="{{ icon_key }}_note" class="btn-icon {{ icon_key }}"
                           href="{{ url(link.route, link.routeparams, { 'query': link.queryparams|merge({ 'back':saurlhash }) } ) }}">{{ translate(link.label) }}</a>
                    {% endfor %}
                {% endif %}
            </div>
        </div>

        <div class="buttons right controls">
            <a class="minibutton minimize_button "></a>
        </div>
    </div>

    <div id="widget_content" class="widget_content">
        <div id="notes_list" class="notes_list">
            {{ form().openTag(form)|raw }}
            {% set element = form.getBaseFieldset.get('reg') %}
            <div id="note_Form">
                <div class="text">
                    <input    name="for_id" type="hidden" />
                    <input    name="fields[title]" type="text"  id="note_title" placeholder="Write a title"/>
                    <textarea name="fields[content]"  id="note_input" class="note_textarea" placeholder="Write a note" rows="5"></textarea>
                </div>

                <div class="buttons">
                    <a class="btn-notes save" style='height:16px' value='Save'   id="save_note"   title='Save'>Save</a>
                    <a class="btn-notes no"   style='height:16px' value='Cancel' id="cancel_note" title='Cancel'>Cancel</a>
                </div>
            </div>
            {{ form().closeTag(form)|raw }}

            <ul id='contento'>
                {% for datarow, avalue in paginator.getCurrentItems %}
                    <li id="note_hide" class="note_hide">

                        {% if avalue.title is not empty %}
                            <h3>{{ avalue.title }}</h3>
                        {% endif %}

                        {% if avalue.content is not empty %}
                            <p class="note_p">{{ avalue.content }}</p>

                            {% if avalue.changed_dtm != avalue.created_dtm  %}
                                <span class="note_person"> Modified by <a href="{{ url( 'common', { 'data':'user', 'view': 'view','id':avalue.changer_id } )~saurl }}">{{ avalue.changer_title }}</a></span>
                            {% else %}
                                <span class="note_person"> Created  by <a href="{{ url( 'common', { 'data':'user', 'view': 'view','id':avalue.owner_id } )~saurl }}">{{ avalue.owner_title }}</a></span>
                            {% endif %}

                            <span class="note_date">{{ avalue.changed_dtm|date(constant('\\Wepo\\Constant::DATETIME_FORMAT')) }}</span>
                        {% endif %}

                          <div class="links">
                               {% for action, conf in actions %}
                                    <a class="actionview"
                                     href="{{ url(conf.route, conf.routeparams|merge({ 'id':''~ attribute(avalue, conf.id) }), { 'query': conf.queryparams|merge({ 'back':saurlhash }) } ) }}"><img
                                       src="/img/1.png" class="{{ action }} note_{{ action }}" alt="{{ action }}"/><span
                                         class="tooltip top">{{ action|capitalize }}</span></a>&nbsp;
                               {% endfor %}
                          </div>
                    </li>
                {% endfor %}
            </ul>
        </div>

        {% if widget.paginator.count > 1 %}
            <div class="tableBottomToolbar">
                <div class="buttons clearfix">
                    {% include 'partial/pagination.twig' with {'pages':widget.paginator.getPages, 'route': 'search', 'params':widget.params} %}
                </div>
            </div>
        {% endif %}
    </div>
    <div class="note-dialog"></div>
</div>

{% block script %}

    <script>
        $(function ()
        {
            var note = $('.note');

            var loadUrl = location.href;
                loadUrl = loadUrl.substring(0, loadUrl.indexOf('?'));
                loadUrl = loadUrl +' '+"#contento";

            note.find('.btn-icon').closest('div').append('<span class="no_recrd hidden">No records</span>');
            $('li.Notes').find('.gs-resize-handle').remove();                  //MAKE unresizable
            $('.note_hide,#contento').css({'width':$('.note').width()-100});  //For window.resize

            notesSizey(); Reload_widgets();

            $('.note_hide').removeClass('gs-w'); //canceling gridster for note's records
            $('div#note_Form').hide();          //hide inputForm on doc.ready

            var count = $("#contento li").size();
            if (count == 0) { $('.notes_list li').css('background', 'none'); }
            if (count <= 1) { $('.notes_list').unbind(twoscrolls()); }
            else            { twoscrolls('.notes_list'); }

            $('#body').on("click", "a#insert_note", function (e)
            {
                e.preventDefault();
                window.Url = $(this).attr('href');

                $('a#insert_note,a.minimize_button').addClass('disabled');
                $("input#note_title,textarea#note_input").val('');

                note.find('.widget_content').show();
                note.removeClass('minimized').addClass('note_Form');
                Reload_widgets();

                $('#contento').hide({effect: 'slow', duration: 400});
                $('#note_Form').removeClass('hidden').show({effect: 'slow', duration: 400});
            });

            $('#body').on("click", "a#cancel_note", function ()
            {
                note.toggleClass('note_Form');
                $('a.minimize_button ').removeClass('disabled');

                if ($('#contento > li').length === 0) {
                    $('.note').find('.widget_content').hide(400);
                }

                Reload_widgets();
                setInterval(function () {
                    if ($(window).scrollTop() < $('#header').height() - $('#mainMenu').height()) {
                        fixedMenu();
                        window.clearTimeout();
                    }
                }, 1);

                $("input#note_title,textarea#note_input").val('');
                $('a#insert_note').removeClass('disabled');
                $('#contento').show({effect: 'clip', duration: 300});
                $('#note_Form').hide({effect: 'slow', duration: 400});

            });

            note.on('click', '.note_delete', function (e)
            {
                e.preventDefault();

                var title = $(this).closest('li').find('h3').text();
                var content = $(this).closest('li').find('p').text();
                var Url = $(this).closest('a').attr('href');

                if (title.length > 50) {
                    title = $.trim(title).substring(0, 42); title = title + "...";
                }

                if (content.length > 50) {
                    content = $.trim(content).substring(0, 42); content = content + "...";
                }

                $(window).on("scroll resize",function()
                {
                    $('.note-dialog').dialog("option", "position", $('.note-dialog').dialog("option", "position"));
                });

                $('.note-dialog').dialog(
                {
                    open: function ()
                    {
                        if ( title.length !== 0 ){ $('.note-dialog').text('"' + title + '"'); }
                        else                     { $('.note-dialog').text('"' + content + '"'); }
                        $('.ui-widget-overlay').addClass('custom-overlay');
                    },

                    close: function () {
                        $('.ui-widget-overlay').removeClass('custom-overlay');
                    },

                    show: {effect: '', duration: 600, my: "top", at: "center", of: window},
                    hide: {effect: '', duration: 400},
                    title: "Do you want to delete selected note ?",
                    modal: true, width: '400', height: '505', resizable: false, draggable: false, closeOnEscape: false,
                    buttons:
                    {
                        Yes: function ()
                        {
                          $('a#insert_note').addClass('disabled');
                          $("#contento").html('<li align = "center" colspan="15"> <img style = "padding:10px;" src =/css/img/icons/32x32-icons/ajax-loader1.gif> </li>');
                          note.addClass('loading_Note');
                          Reload_widgets();
                          startloader();

                            $.ajax({
                                url: Url,
                                type: 'POST',
                                traditional: true,
                                data:{
                                      delyes:1
                                },
                                success: function ()
                                {
                                    notesSizey();
                                    note.removeClass('loading_Note');
                                   $('.notes_list li').css('background', 'none');
                                   $('#contento').load(loadUrl);
                                }
                            });

                            $(document).ajaxStop(function ()
                            {
                                notesSizey();
                                stoploader();
                                Reload_widgets();
                                $('a#insert_note').removeClass('disabled');
                                $('.note_hide,#contento').css({'width':$('.note').width()-100});
                                var count = $("#contento li").size();
                                if (count == 0){ $('.notes_list li').css('background', 'none'); }
                                if (count <= 1){ $('.notes_list').unbind(twoscrolls()); }
                            });

                            $('#note_Form').hide();
                            $(document).ajaxStop(function()
                            {
                                if ( $(window).scrollTop() < $('#header').height() ){
                                    $('#mainMenu').css('position', 'relative');
                                }
                            });

                            $(this).dialog("close");
                        },
                        No: function () {
                            $(this).dialog("close");
                        }
                    }
                });
            });

            note.on('click', '.note_update', function (e)
            {
                e.preventDefault();
                window.NoteEdit = true;
                window.Url      = $(this).closest('a').attr('href');

                note.addClass('note_Form');
                Reload_widgets();

                $('#insert_note').addClass('disabled');
                var title   = $(this).closest('li').find('h3').text();
                var content = $(this).closest('li').find('p').text();

                setTimeout(function () {
                    $('#note_Form').show({effect: 'slow', duration: 500});
                }, 500);
                $('#contento').hide({effect: 'slow', duration: 300});

                $("input[name='fields[title]']").val(title);
                $("textarea[name='fields[content]']").val(content);
            });

            note.on('click', 'a#save_note', function ()
            {
                var title = $('#note_title').val();
                var content = $('#note_input').val();
                $('a.minimize_button ').removeClass('disabled');

                if (( content.length >= 3))
                {
                    if (( content.length < 300 ) && ( title.length < 100 ))
                    {
                        startloader();
                        $('#note_Form').hide();
                        $('#contento').show();
                        $("#contento").html('<li align = "center" colspan="20"> <img id="load_image" style = "padding:10px;" src =/css/img/icons/32x32-icons/ajax-loader1.gif> </li>');
                        note.addClass('loading_Note');
                        Reload_widgets();

                        $.ajax({
                            url: window.Url,
                            type: 'POST',
                            traditional: true,
                            data: {
                                'fields[title]': title,
                                'fields[content]': content
                            },

                            success: function ()
                            {
                                note.removeClass('loading_Note');
                                $('#contento').load(loadUrl);
                            },

                            error: function (){
                                alert('An ERROR has occurred!');
                                location.reload();
                            }
                        });

                        $(document).ajaxStop(function ()
                        {
                            stoploader();
                            notesSizey();
                            Reload_widgets();
                            $('.note_hide,#contento').css({'width':$('.note').width()-100});
                            $('a#insert_note').removeClass('disabled');

                            var count = $("#contento li").size();
                            if (count >= 2) {twoscrolls('.notes_list'); }
                        });
                    }
                    else {
                        alert('Data is too long');
                    }
                }
                else {
                    alert('Length of the text should be at least 3 characters');
                }
            });
        });
    </script>
{% endblock script %}

{% block style %}
    <style>
        #insert_note, #cancel_note, #save_note {
            cursor: pointer;
        }

        .note_p{
            font-size:15px;
        }

        #contento h3{
            font-size:16px;
        }

        #note_title {
            width: 520px;
        }

        .note_textarea {
            resize: none;
            width: 520px;
            margin-top: 15px;
            height: 30px;
            margin-top: 4px;
        }

        .notes_list {
            overflow-y: auto;
            overflow-x: hidden;
            max-height: 151px;
        }

        .delete_note {
            font-size: 13px;
        }

        .delete_note:hover {
            color: red;
        }

        .edit_note {
            font-size: 13px;
        }

        .edit_note:hover {
            color: #80bd57;
        }

        .ui-dialog-content {
            font-size: 16px;
            text-align: left;
        }

        .note_hide {
            height: 30%;
        }

        .note_date{
            color : #999999;
            font-size: 12px;
        }

        .minibutton {
            cursor: pointer;
        }

        #widget_content {
            padding-top: 0px !important;
            padding: 0px 12px 18px 12px;
        }
    </style>
{% endblock style %}
